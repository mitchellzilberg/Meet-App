{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","summary","location","start","dateTime","onClick","description","end","timeZone","organizer","email","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","navigator","onLine","localStorage","getItem","done","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","code","results","authUrl","href","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentLocation","alertText","eventCount","filteredEvents","slice","offlineAlert","getData","number","city","split","shift","mounted","addEventListener","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.12ea0e3a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const { event } = this.props;\n\n    return (\n      <div className=\"event\">\n        <div className=\"event-overview\">\n          <h2 className=\"summary\">{event.summary}</h2>\n          <p className=\"location\">{event.location}</p>\n          <p className=\"start-time\">{event.start.dateTime}</p>\n          {!showDetails && (\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\n              Show Event Details\n            </button>\n          )}\n          {showDetails && (\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\n              Hide Event Details\n            </button>\n          )}\n        </div>\n\n        {showDetails && (\n          <div className=\"event-details\">\n            <p className=\"description\">{event.description}</p>\n            <p className=\"end-time\">{event.end.dateTime}</p>\n            <p className=\"time-zone\">{event.start.timeZone}</p>\n            <p className=\"organizer-email\">{event.organizer.email}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Event;","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n// import { mockData } from './mock-data';\n\nclass EventList extends Component {\n  render() {\n    // const events = mockData;\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nexport default EventList;","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"blue\";\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"red\";\n  }\n}\n\n// class OfflineAlert extends Alert {\n//   constructor(props) {\n//     super(props);\n//     this.color = \"orange\";\n//   }\n// }\n\nexport { InfoAlert, ErrorAlert};","import React, { Component } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: false,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText:\n          \"We can not find the city you are looking for. Please try another city\",\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: \"\",\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText: \"\",\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <h2 className=\"citysearch-instruction\">Choose your closest city</h2>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n          placeholder=\"Search for a City\"\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\nimport { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({\n      numberOfEvents: value,\n    });\n\n    if (value < 1 || value >=  33) {\n      this.setState({\n        infoText: \"Please choose a number of events between 1 and 32\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"number-of-events\">\n        <ErrorAlert text={this.state.infoText} />\n        <label className=\"number-of-events-label\">Number of Events: </label>\n        <input\n          type=\"number\"\n          className=\"event-number\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import axios from \"axios\";\nimport { mockData } from \"./mock-data\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  // if (\n  //   !navigator.onLine &&\n  //   !window.location.href.startsWith(\"http://localhost\")\n  // ) {\n  //   const events = localStorage.getItem(\"lastEvents\");\n  //   NProgress.done();\n  //   return JSON.parse(events).events;\n  // }\n\n  // if (window.location.href.startsWith(\"http://localhost\")) {\n  //   NProgress.done();\n  //   return mockData;\n  // }\n  \n  if(!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n  \n    NProgress.done();\n    return { events: JSON.parse(events).events, locations: extractLocations(JSON.parse(events).events)};\n  }\n  \n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      let locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React, { Component } from \"react\";\nimport \"./nprogress.css\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations, getEvents } from \"./api\";\n// import { OfflineAlert } from \"./Alert\";\n// import {\n//   ScatterChart,\n//   Scatter,\n//   XAxis,\n//   YAxis,\n//   CartesianGrid,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from \"recharts\";\n// import EventGenre from \"./EventGenre\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n    alertText: \"\",\n  };\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events,\n          locations: extractLocations(events),\n        });\n      }\n    });\n    window.addEventListener(\"online\", this.offlineAlert());\n  }\n\n  offlineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        alertText:\n          \"You are currently offline. Please connect to the internet for an updated list of events\",\n      });\n    } else {\n      this.setState({ alertText: \"\" });\n    }\n  };\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(\",\").shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Meet-Us</h1>\n        {/* <OfflineAlert text={this.state.alertText} /> */}\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <div className=\"data-vis-wrapper\">\n          <h4>Events in each city</h4>\n        </div>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === \"[::1]\" ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener(\"load\", () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              \"This web app is being served cache-first by a service \" +\n                \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { \"Service-Worker\": \"script\" },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          \"No internet connection found. App is running in offline mode.\"\n        );\n      });\n  }\n  \n  export function unregister() {\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n// import * as atatus from 'atatus-js';\nimport * as atatus from 'atatus-spa';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n  );\n\n\nserviceWorker.register();\n// serverWorker.unregister();\natatus.config('259ee5e9bb574eb9b4abee9ee76ecacc').install();\n\n"],"sourceRoot":""}