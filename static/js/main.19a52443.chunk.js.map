{"version":3,"sources":["CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","reportWebVitals.js","index.js"],"names":["CitySearch","state","query","suggestions","showSuggestions","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","length","setState","infoText","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","onFocus","placeholder","style","display","map","onClick","Component","NumberOfEvents","numberOfEvents","mockData","kind","etag","id","status","htmlLink","created","updated","summary","description","creator","email","self","organizer","start","dateTime","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","events","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","Axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","currentLocation","alertText","eventCount","filteredEvents","slice","getData","number","city","split","shift","mounted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a52443.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: false,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText:\n          \"We can not find the city you are looking for. Please try another city\",\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: \"\",\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText: \"\",\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        {/* <InfoAlert text={this.state.infoText} /> */}\n        <h2 className=\"citysearch-instruction\">Choose your closest city</h2>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n          placeholder=\"Search for a City\"\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n// import { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({\n      numberOfEvents: value,\n    });\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Please choose a number of events between 1 and 32\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"number-of-events\">\n        {/* <ErrorAlert text={this.state.infoText} /> */}\n        <label className=\"number-of-events-label\">Number of Events: </label>\n        <input\n          type=\"number\"\n          className=\"event-number\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n    },\n    {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin'\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n    }\n  ];\n  \n  export { mockData };","import Axios from \"axios\";\nimport { mockData } from \"./mock-data\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    NProgress.done() ;\n    return {\n      events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events)\n    };\n  }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await Axios.get(url);\n    if (result.data) {\n      let locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await Axios.get(\n        \"https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { Component } from \"react\";\n// import \"./nprogress.css\";\nimport \"./App.css\";\n// import EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations, getEvents } from \"./api\";\n// import { OfflineAlert } from \"./Alert\";\n// import {\n//   ScatterChart,\n//   Scatter,\n//   XAxis,\n//   YAxis,\n//   CartesianGrid,\n//   Tooltip,\n//   ResponsiveContainer,\n// } from \"recharts\";\n// import EventGenre from \"./EventGenre\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n    alertText: \"\",\n  };\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events,\n          locations: extractLocations(events),\n        });\n      }\n    });\n    // window.addEventListener(\"online\", this.offlineAlert());\n  }\n\n  // offlineAlert = () => {\n  //   if (navigator.onLine === false) {\n  //     this.setState({\n  //       alertText:\n  //         \"You are currently offline. Please connect to the internet for an updated list of events\",\n  //     });\n  //   } else {\n  //     this.setState({ alertText: \"\" });\n  //   }\n  // };\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(\",\").shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Meet-Us</h1>\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <div className=\"data-vis-wrapper\">\n          <h4>Events in each city</h4>\n\n        </div>\n        {/* <EventList events={this.state.events} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}