[{"/Users/mitchell/Desktop/meet-app/src/index.js":"1","/Users/mitchell/Desktop/meet-app/src/App.js":"2","/Users/mitchell/Desktop/meet-app/src/reportWebVitals.js":"3","/Users/mitchell/Desktop/meet-app/src/NumberOfEvents.js":"4","/Users/mitchell/Desktop/meet-app/src/CitySearch.js":"5","/Users/mitchell/Desktop/meet-app/src/api.js":"6","/Users/mitchell/Desktop/meet-app/src/mock-data.js":"7","/Users/mitchell/Desktop/meet-app/src/EventList.js":"8","/Users/mitchell/Desktop/meet-app/src/Event.js":"9","/Users/mitchell/Desktop/meet-app/src/Alert.js":"10","/Users/mitchell/Desktop/meet-app/src/serviceWorker.js":"11"},{"size":606,"mtime":1611604551150,"results":"12","hashOfConfig":"13"},{"size":2897,"mtime":1611607258396,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611427012745,"results":"15","hashOfConfig":"16"},{"size":989,"mtime":1611509035164,"results":"17","hashOfConfig":"13"},{"size":1989,"mtime":1611449282965,"results":"18","hashOfConfig":"13"},{"size":3167,"mtime":1611606387266,"results":"19","hashOfConfig":"13"},{"size":2953,"mtime":1611432577585,"results":"20","hashOfConfig":"13"},{"size":454,"mtime":1611448700797,"results":"21","hashOfConfig":"13"},{"size":1425,"mtime":1611506789778,"results":"22","hashOfConfig":"13"},{"size":722,"mtime":1611607219504,"results":"23","hashOfConfig":"13"},{"size":4776,"mtime":1611508082373,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"y50c0",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"by3r53",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/mitchell/Desktop/meet-app/src/index.js",[],["49","50"],"/Users/mitchell/Desktop/meet-app/src/App.js",[],"/Users/mitchell/Desktop/meet-app/src/reportWebVitals.js",[],"/Users/mitchell/Desktop/meet-app/src/NumberOfEvents.js",[],"/Users/mitchell/Desktop/meet-app/src/CitySearch.js",[],"/Users/mitchell/Desktop/meet-app/src/api.js",["51"],"import axios from \"axios\";\nimport { mockData } from \"./mock-data\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  // if (\n  //   !navigator.onLine &&\n  //   !window.location.href.startsWith(\"http://localhost\")\n  // ) {\n  //   const events = localStorage.getItem(\"lastEvents\");\n  //   NProgress.done();\n  //   return JSON.parse(events).events;\n  // }\n\n  // if (window.location.href.startsWith(\"http://localhost\")) {\n  //   NProgress.done();\n  //   return mockData;\n  // }\n  \n  if(!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n  \n    NProgress.done();\n    return { events: JSON.parse(events).events, locations: extractLocations(JSON.parse(events).events)};\n  }\n  \n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      let locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://jwyioruftd.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","/Users/mitchell/Desktop/meet-app/src/mock-data.js",[],"/Users/mitchell/Desktop/meet-app/src/EventList.js",[],"/Users/mitchell/Desktop/meet-app/src/Event.js",[],"/Users/mitchell/Desktop/meet-app/src/Alert.js",[],"/Users/mitchell/Desktop/meet-app/src/serviceWorker.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'mockData' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]